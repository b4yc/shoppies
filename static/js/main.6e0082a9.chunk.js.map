{"version":3,"sources":["components/Header/index.js","cartReducer.js","components/CartProvider/index.js","components/Movie/index.js","components/Search/index.js","components/Nominations/index.js","components/Cart/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","toggle","Grid","columns","className","Column","floated","data-testid","src","alt","Button","icon","labelPosition","animated","size","onClick","e","data","style","backgroundColor","color","padding","Icon","name","initialState","initializer","initialValue","JSON","parse","localStorage","getItem","cartReducer","state","action","type","item","filter","removeItem","CartContext","createContext","CartProvider","children","useReducer","cart","dispatch","useEffect","setItem","stringify","Provider","value","Movie","movies","useContext","useState","modalOpen","setModalOpen","modalMessage","setModalMessage","Card","Group","centered","map","movie","selected","imdbID","length","width","Poster","Content","Title","Meta","Year","disabled","product","addToCartHandler","hidden","visible","Modal","open","onClose","Actions","Search","isLoading","setIsLoading","results","setResults","setValue","numOfResults","setNumOfResults","Form","onSubmit","preventDefault","fetch","then","response","json","parseInt","totalResults","loading","Input","placeholder","onChange","target","Container","textAlign","Row","Pagination","defaultActivePage","totalPages","Math","ceil","onPageChange","event","page","activePage","Nominations","nomination","Cart","margin","Divider","App","setVisible","toggleVisible","Sidebar","Pushable","as","Menu","animation","direction","inverted","onHide","vertical","Pusher","dimmed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e0082a9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, Icon, Grid } from \"semantic-ui-react\";\nimport \"./styles.scss\";\n\nconst Header = ({ toggle }) => {\n  return (\n    <Grid columns={2} className=\"header\">\n      <Grid.Column floated=\"left\">\n        <img\n          data-testid=\"logo\"\n          src={\"shoppies-logo.png\"}\n          alt=\"logo\"\n          className=\"logo\"\n        ></img>\n      </Grid.Column>\n      <Grid.Column floated=\"right\">\n        <div>\n          <Button\n            data-testid=\"nom-button\"\n            icon\n            labelPosition=\"right\"\n            animated=\"vertical\"\n            floated=\"right\"\n            size=\"large\"\n            onClick={(e, data) => {\n              toggle();\n            }}\n            style={{\n              backgroundColor: \"#084c44\",\n              color: \"white\",\n              padding: \"10px\",\n            }}\n          >\n            Your Nominations\n            <Icon name=\"heart\" />\n          </Button>\n        </div>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Header;\n","const initialState = [];\n\nexport const initializer = (initialValue = initialState) =>\n  JSON.parse(localStorage.getItem(\"localCart\")) || initialValue;\n\nexport const cartReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      return [...state, { ...action.item }];\n\n    case \"REMOVE_FROM_CART\":\n      return state.filter((item) => item !== action.item);\n\n    case \"CLEAR_CART\":\n      localStorage.removeItem(\"localCart\");\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport const addToCart = (item) => ({\n  type: \"ADD_TO_CART\",\n  item,\n});\n\nexport const removeFromCart = (item) => ({\n  type: \"REMOVE_FROM_CART\",\n  item,\n});\n\nexport const clearCart = () => ({\n  type: \"CLEAR_CART\",\n});\n","import React, { createContext, useEffect, useReducer } from \"react\";\nimport { cartReducer, initializer } from \"../../cartReducer\";\n\nexport const CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n  const [cart, dispatch] = useReducer(cartReducer, [], initializer);\n\n  useEffect(() => {\n    localStorage.setItem(\"localCart\", JSON.stringify(cart));\n  }, [cart]);\n\n  return (\n    <CartContext.Provider\n      value={{\n        cart,\n        dispatch,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { CartContext } from \"../CartProvider\";\nimport { addToCart } from \"../../cartReducer\";\nimport { Card, Icon, Button, Modal } from \"semantic-ui-react\";\nimport \"./styles.scss\";\n\nconst Movie = ({ movies, toggle }) => {\n  const { cart, dispatch } = useContext(CartContext);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalMessage, setModalMessage] = useState();\n\n  const addToCartHandler = (product) => {\n    if (cart.length === 4) {\n      setModalMessage(\"You have successfully nominated 5 movies.\");\n      setModalOpen(true);\n    } else if (cart.length >= 5) {\n      setModalMessage(\n        \"You have nominated 5 movies already! If you'd like to add another, please remove an existing one.\"\n      );\n      setModalOpen(true);\n      return;\n    }\n    dispatch(addToCart(product));\n  };\n\n  return (\n    <div>\n      <Card.Group centered className=\"movies\">\n        {movies.map((movie) => {\n          let selected =\n            cart.filter((item) => item.imdbID === movie.imdbID).length > 0;\n          return (\n            <Card style={{ width: \"200px\" }} key={movie.imdbID}>\n              {movie.Poster === \"N/A\" ? (\n                <div className=\"poster-not-found\">Poster not found</div>\n              ) : (\n                <img src={movie.Poster} className=\"poster\" alt=\"movie poster\" />\n              )}\n\n              <Card.Content>\n                <Card.Header data-testid=\"title\">{movie.Title}</Card.Header>\n                <Card.Meta data-testid=\"year\">\n                  <span className=\"date\">{movie.Year}</span>\n                </Card.Meta>\n              </Card.Content>\n              <Button\n                animated=\"vertical\"\n                disabled={selected}\n                onClick={() => addToCartHandler(movie)}\n                style={{ backgroundColor: \"#084c44\", color: \"white\" }}\n              >\n                <Button.Content hidden>Nominate</Button.Content>\n                {selected ? (\n                  <Button.Content visible>Nominated</Button.Content>\n                ) : (\n                  <Button.Content visible>\n                    <Icon name=\"heart\" />\n                  </Button.Content>\n                )}\n              </Button>\n            </Card>\n          );\n        })}\n      </Card.Group>\n      <Modal size=\"small\" open={modalOpen} onClose={() => setModalOpen(false)}>\n        <Modal.Header>Your 5 movies have been nominated!</Modal.Header>\n        <Modal.Content>{modalMessage}</Modal.Content>\n        <Modal.Actions>\n          <Button onClick={() => setModalOpen(false)}>Close</Button>\n          <Button\n            onClick={() => {\n              setModalOpen(false);\n              toggle();\n            }}\n          >\n            View Nominations\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Movie;\n","import React, { useState } from \"react\";\nimport { Form, Button, Pagination, Container, Grid } from \"semantic-ui-react\";\n\nimport Movie from \"../Movie\";\nimport \"./styles.scss\";\n\nconst Search = ({ toggle }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [results, setResults] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const [numOfResults, setNumOfResults] = useState(0);\n\n  function handleChange(e) {\n    setValue(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(`https://www.omdbapi.com/?s=${value}&type=movie&apikey=91b0581c`)\n      .then((response) => response.json())\n      .then((data) => {\n        setResults(data.Search);\n        setNumOfResults(parseInt(data.totalResults));\n        setIsLoading(false);\n      });\n  }\n\n  function handlePages(page) {\n    setIsLoading(true);\n    fetch(\n      `https://www.omdbapi.com/?s=${value}&page=${page}&type=movie&apikey=91b0581c`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setResults(data.Search);\n        setIsLoading(false);\n      });\n  }\n\n  return (\n    <div className=\"main\">\n      <h1>Find your favourite movies to nominate</h1>\n      <Form onSubmit={handleSubmit} loading={isLoading} className=\"searchbar\">\n        <Form.Input\n          action={\n            <Button\n              color=\"teal\"\n              icon=\"search\"\n              type=\"submit\"\n              style={{ backgroundColor: \"#084c44\" }}\n            ></Button>\n          }\n          placeholder=\"Search for a Movie...\"\n          value={value}\n          onChange={handleChange}\n          size=\"large\"\n        ></Form.Input>\n      </Form>\n      <br />\n      <Container textAlign=\"center\">\n        {results && results.length > 0 ? (\n          <Grid centered>\n            <Grid.Row>\n              <Grid.Column>\n                <Grid.Row>\n                  <p>Found {numOfResults} Movies</p>\n                </Grid.Row>\n                <Grid.Row>\n                  <Movie movies={results} toggle={toggle}></Movie>\n                </Grid.Row>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Pagination\n                defaultActivePage={1}\n                totalPages={Math.ceil(numOfResults / 10)}\n                onPageChange={(event, data) => {\n                  handlePages(data.activePage);\n                }}\n              />\n            </Grid.Row>\n          </Grid>\n        ) : results ? null : (\n          <div>Sorry! No results were found.</div>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { useContext } from \"react\";\nimport { CartContext } from \"../CartProvider\";\nimport { removeFromCart } from \"../../cartReducer\";\nimport { Card, Icon, Button } from \"semantic-ui-react\";\n\nconst Nominations = () => {\n  const { cart, dispatch } = useContext(CartContext);\n  const removeFromCartHandler = (itemToRemove) =>\n    dispatch(removeFromCart(itemToRemove));\n\n  return (\n    <Card.Group centered>\n      {cart.map((nomination) => {\n        return (\n          <div>\n            <br />\n            <Card style={{ width: \"200px\", backgroundColor: \"#fcfcec\" }}>\n              <Card.Content>\n                <Card.Header data-testid=\"title\">\n                  {nomination.Title}\n                </Card.Header>\n                <Card.Meta data-testid=\"year\">\n                  <span className=\"date\">{nomination.Year}</span>\n                </Card.Meta>\n              </Card.Content>\n              <Button\n                data-testid=\"remove-button\"\n                animated=\"vertical\"\n                onClick={() => removeFromCartHandler(nomination)}\n                style={{ backgroundColor: \"#e6e6d5\" }}\n              >\n                <Button.Content hidden>Remove</Button.Content>\n                <Button.Content visible>\n                  <Icon name=\"trash\" />\n                </Button.Content>\n              </Button>\n            </Card>\n          </div>\n        );\n      })}\n    </Card.Group>\n  );\n};\n\nexport default Nominations;\n","import React, { useContext } from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { CartContext } from \"../CartProvider\";\nimport { clearCart } from \"../../cartReducer\";\nimport Nominations from \"../Nominations\";\nimport { Button, Divider } from \"semantic-ui-react\";\n\nconst Cart = ({ toggle }) => {\n  const { cart, dispatch } = useContext(CartContext);\n  const clearCartHandler = (item) => {\n    dispatch(clearCart(item));\n  };\n\n  return (\n    <div data-testid=\"cart\">\n      <Button\n        data-testid=\"close-button\"\n        icon\n        onClick={toggle}\n        size=\"huge\"\n        style={{ backgroundColor: \"inherit\", margin: \"20px\" }}\n      >\n        <Icon name=\"x\" />\n      </Button>\n      <Divider />\n      <Button\n        data-testid=\"clear-button\"\n        disabled={cart.length === 0}\n        onClick={clearCartHandler}\n        style={{ width: \"200px\", backgroundColor: \"#fcfcec\" }}\n      >\n        Clear All Nominations\n      </Button>\n      <Divider />\n      <Nominations />\n    </div>\n  );\n};\n\nexport default Cart;\n","import \"./App.scss\";\nimport React, { useState } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Grid, Menu, Sidebar } from \"semantic-ui-react\";\n\n// import components\nimport Header from \"./components/Header\";\nimport Search from \"./components/Search\";\nimport Cart from \"./components/Cart\";\n\nfunction App() {\n  const [visible, setVisible] = useState(false);\n\n  function toggleVisible() {\n    setVisible(!visible);\n  }\n\n  return (\n    <div>\n      <Grid columns={1}>\n        <Grid.Column>\n          <Sidebar.Pushable>\n            <Sidebar\n              as={Menu}\n              animation=\"overlay\"\n              direction=\"right\"\n              icon=\"labeled\"\n              inverted\n              onHide={() => setVisible(false)}\n              vertical\n              visible={visible}\n              width=\"wide\"\n              style={{ backgroundColor: \"#084c44\" }}\n            >\n              <Cart toggle={toggleVisible} />\n            </Sidebar>\n            <Sidebar.Pusher dimmed={visible}>\n              <div className=\"App\">\n                <Grid>\n                  <Grid.Column>\n                    <Grid.Row data-testid=\"header\">\n                      <Header toggle={toggleVisible} />\n                    </Grid.Row>\n                    <Grid.Row data-testid=\"search\">\n                      <Search toggle={toggleVisible} />\n                    </Grid.Row>\n                  </Grid.Column>\n                </Grid>\n              </div>\n            </Sidebar.Pusher>\n          </Sidebar.Pushable>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { CartProvider } from \"./components/CartProvider\";\nimport \"semantic-ui-less/semantic.less\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CartProvider>\n      <App />\n    </CartProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}